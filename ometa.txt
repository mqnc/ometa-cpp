
rule:
R := A
R[x, y] := x y R2[x, y]

choice:
A | B | C

sequence:
A B C

action:
A -> {...} // with parameters
^{...} // without parameters

predicate:
A -> ?{...} // with parameters
^?{...} // without parameters

cpp:
{a == b}
{123}
{x = 7; return x;}

binding:
A:x

repeats:
A? A* A+

look ahead:
&A !A

capture:
<A>

range:
{'x'}..{'y'}

epsilon:
()

never:
!()

any:
.

end:
!.

literal:
"awa"

ignore:
~A

recursion:
R' : {std::string_view} -> {int}
S := "(" R' ")"
R' => S
